<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bulk Question Upload</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>

<body class="bg-gray-100 min-h-screen flex items-center justify-center">
  <form id="testForm" class="w-full max-w-2xl bg-white p-8 rounded shadow-md" enctype="multipart/form-data">
    <h1 class="text-2xl font-bold mb-6 text-center">Bulk Upload Questions</h1>

    <div class="mb-4">
      <label for="subject" class="block font-semibold text-gray-700 mb-2">Subject</label>
      <select name="subject" id="subject" required class="w-full border border-gray-300 p-2 rounded" onchange="fetchChapters()"></select>
    </div>

    <div class="mb-4">
      <label for="chapter" class="block font-semibold text-gray-700 mb-2">Chapter</label>
      <select name="ChapterName" id="chapter" required class="w-full border border-gray-300 p-2 rounded" onchange="fetchTopics()"></select>
    </div>

    <div class="mb-4">
      <label for="topic" class="block font-semibold text-gray-700 mb-2">Topic</label>
      <select name="TopicName" id="topic" required class="w-full border border-gray-300 p-2 rounded"></select>
    </div>

    <div class="mb-4">
      <label for="questionType" class="block font-semibold text-gray-700 mb-2">Question Type</label>
      <select name="questionType" required class="w-full border border-gray-300 p-2 rounded">
        <option value="mcq">MCQ</option>
        <option value="numerical">Numerical</option>
      </select>
    </div>

    <!-- Dropzone -->
    <div id="drop-area" class="drop-area border-2 border-dashed border-gray-300 p-6 rounded text-center text-gray-500 cursor-pointer mb-4">
      <span>Drag & Drop images (max 10), or click to select</span>
      <input type="file" name="files" id="file-input" class="hidden" required multiple />
      <div class="file-name mt-2 text-gray-600 text-sm font-medium" id="file-name"></div>
    </div>

    <button type="submit" class="w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded">
      Upload
    </button>

    <div id="loader" class="mt-4 text-center hidden">
      <span class="text-sm text-blue-600">Uploading...</span>
    </div>

    <div id="successMessage" class="hidden text-green-600 font-medium text-center mt-4"></div>
    <div id="errorMessage" class="hidden text-red-600 font-medium text-center mt-4"></div>
  </form>

  <script>
    async function fetchSubjects() {
      const response = await fetch('/api/subjects');
      const data = await response.json();
      const subject = document.getElementById("subject");
      subject.innerHTML = '<option value="">Select Subject</option>';
      data.forEach(sub => {
        const option = document.createElement('option');
        option.value = sub.Name;
        option.textContent = sub.Name;
        subject.appendChild(option);
      });
    }

    async function fetchChapters() {
      const subjectName = document.getElementById('subject').value;
      const response = await fetch(`/api/chapters/${subjectName}`);
      const data = await response.json();
      const chapter = document.getElementById("chapter");
      chapter.innerHTML = '<option value="">Select Chapter</option>';
      data.forEach(ch => {
        const option = document.createElement('option');
        option.value = ch.ChapterName;
        option.textContent = ch.ChapterName;
        chapter.appendChild(option);
      });
    }

    async function fetchTopics() {
      const chapterName = document.getElementById('chapter').value;
      const response = await fetch(`/api/topics/${chapterName}`);
      const data = await response.json();
      const topic = document.getElementById("topic");
      topic.innerHTML = '<option value="">Select Topic</option>';
      data.forEach(tp => {
        const option = document.createElement('option');
        option.value = tp.TopicName;
        option.textContent = tp.TopicName;
        topic.appendChild(option);
      });
    }

    fetchSubjects();

    const dropArea = document.getElementById('drop-area');
    const fileInput = document.getElementById('file-input');
    const fileNameDisplay = document.getElementById('file-name');

    dropArea.addEventListener('click', () => fileInput.click());
    dropArea.addEventListener('dragover', (e) => {
      e.preventDefault();
      dropArea.classList.add('drag-over');
    });
    dropArea.addEventListener('dragleave', () => dropArea.classList.remove('drag-over'));
    dropArea.addEventListener('drop', (e) => {
      e.preventDefault();
      dropArea.classList.remove('drag-over');
      const files = e.dataTransfer.files;
      if (files.length > 10) {
        alert("You can upload a maximum of 10 files.");
        return;
      }
      fileInput.files = files;
      displayFileNames(files);
    });

    fileInput.addEventListener('change', () => {
      if (fileInput.files.length > 0) displayFileNames(fileInput.files);
    });

    function displayFileNames(files) {
      const names = Array.from(files).map(file => `âœ” ${file.name}`).join('<br>');
      fileNameDisplay.innerHTML = names;
    }

    document.getElementById("testForm").addEventListener("submit", async function (event) {
      event.preventDefault();
      const formData = new FormData(this);
      document.getElementById("loader").classList.remove("hidden");

      try {
        const response = await fetch('/create-ques', { method: 'POST', body: formData });
        const result = await response.json();
        const successDiv = document.getElementById("successMessage");
        const errorDiv = document.getElementById("errorMessage");
        document.getElementById("loader").classList.add("hidden");

        if (response.ok) {
          successDiv.innerText = result.message;
          successDiv.classList.remove("hidden");
          setTimeout(() => successDiv.classList.add("hidden"), 3000);
          fileInput.value = "";
          fileNameDisplay.innerHTML = "";
        } else {
          errorDiv.innerText = result.message;
          errorDiv.classList.remove("hidden");
          setTimeout(() => errorDiv.classList.add("hidden"), 3000);
        }
      } catch (error) {
        console.error("Error submitting form:", error);
        const errorDiv = document.getElementById("errorMessage");
        errorDiv.innerText = 'An error occurred. Please try again later.';
        errorDiv.classList.remove("hidden");
        setTimeout(() => errorDiv.classList.add("hidden"), 3000);
        document.getElementById("loader").classList.add("hidden");
      }
    });
  </script>
</body>

</html>